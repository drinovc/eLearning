{
    "type": "Ext.app.ViewModel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "editslides",
        "designer|userClassName": "EditSlidesViewModel"
    },
    "configAlternates": {
        "designer|userAlias": "string",
        "designer|userClassName": "string"
    },
    "designerId": "e003305b-d8cd-4ae1-9a89-33526cc237da",
    "cn": [
        {
            "type": "Ext.data.TreeStore",
            "reference": {
                "name": "stores",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "defaultRootText": "Slides",
                "model": "Slide",
                "name": "TreeStoreSlides",
                "parentIdProperty": "parentId",
                "root": [
                    "{",
                    "    expanded: true,",
                    "    loaded: true",
                    "}"
                ]
            },
            "configAlternates": {
                "model": "model",
                "name": "string",
                "root": "object",
                "defaultRootText": "string",
                "clearOnLoad": "boolean",
                "parentIdProperty": "string",
                "autoSync": "boolean",
                "rootVisible": "boolean"
            },
            "name": "MyTreeStore",
            "designerId": "b2f37da4-75d4-40f1-a493-a97a697efefb",
            "cn": [
                {
                    "type": "Ext.data.proxy.Rest",
                    "reference": {
                        "name": "proxy",
                        "type": "object"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "api": [
                            "{",
                            "    create: '/Pub/Pages',",
                            "    read: '/Pub/Pages',",
                            "    update: '/POST/Pub/Pages',",
                            "    destroy: '/Pub/Pages'",
                            "}"
                        ]
                    },
                    "configAlternates": {
                        "api": "object"
                    },
                    "name": "MyRestProxy1",
                    "designerId": "c58f2f47-f466-41a0-a967-33abc75ac302",
                    "cn": [
                        {
                            "type": "Ext.data.reader.Json",
                            "reference": {
                                "name": "reader",
                                "type": "object"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "rootProperty": "data"
                            },
                            "configAlternates": {
                                "rootProperty": "string"
                            },
                            "name": "MyJsonReader1",
                            "designerId": "bc8e5eee-c14c-4444-a2c2-57c04e7f9a6a"
                        },
                        {
                            "type": "Ext.data.writer.Json",
                            "reference": {
                                "name": "writer",
                                "type": "object"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "rootProperty": "data",
                                "writeAllFields": true
                            },
                            "configAlternates": {
                                "rootProperty": "string",
                                "writeAllFields": "boolean"
                            },
                            "name": "MyJsonWriter",
                            "designerId": "d5f0f00a-a1a0-4099-9e72-fc1759ea3199"
                        }
                    ]
                },
                {
                    "type": "basicfunction",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "designer|params": [
                            "silent"
                        ],
                        "fn": "removeAll",
                        "implHandler": [
                            "",
                            "var root = this.getRootNode();",
                            "if (root) {",
                            "    root.destroy(true);",
                            "}",
                            "",
                            "if(silent !== true){",
                            "    this.fireEvent('clear', this);",
                            "}",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "/*",
                            "",
                            "",
                            "",
                            "",
                            "console.log(\"called my remove all function in treestoreslides\");",
                            "",
                            "var me = this,",
                            "    root = me.getRootNode();",
                            "",
                            "if(silent !== true){",
                            "    if (root) {",
                            "        // will fire the 'destroy' operation for every child of the root",
                            "        root.destroy(true);",
                            "    }",
                            "    //fire the clear even only if not silent",
                            "    this.fireEvent('clear', me);",
                            "}else{",
                            "    if (root) {",
                            "        // temporarily remove the onNodeRemove event listener so that when removeAll is called,",
                            "        // the removed nodes do not get added to the removed array",
                            "        //me.tree.on('remove', me.onNodeRemove, me); - todo this was before i added below line",
                            "        me.on('remove', me.onNodeRemove, me);",
                            "",
                            "        //root.removeAll(false); // silent remove all children",
                            "        //root.destroy(false); // destroy just the root",
                            "",
                            "        // reattach the onNodeRemove listener",
                            "        //me.tree.on('remove', me.onNodeRemove, me); - todo this was before i added below line",
                            "        me.on('remove', me.onNodeRemove, me);",
                            "    }",
                            "}*/"
                        ]
                    },
                    "configAlternates": {
                        "designer|params": "typedarray",
                        "fn": "string",
                        "implHandler": "code"
                    },
                    "name": "removeAll",
                    "designerId": "820b403a-24c0-4e24-bfce-8d80f57cdf0a"
                }
            ]
        },
        {
            "type": "jsonstore",
            "reference": {
                "name": "stores",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "model": "Question",
                "name": "QuestionsStoreSlides"
            },
            "configAlternates": {
                "model": "model",
                "name": "string"
            },
            "name": "MyJsonStore1",
            "designerId": "2b340d21-6c78-4a37-9f1a-44e597f2a692",
            "cn": [
                {
                    "type": "Ext.data.proxy.Ajax",
                    "reference": {
                        "name": "proxy",
                        "type": "object"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "api": [
                            "{",
                            "    create: '/Pub/Questions',",
                            "    read: '/Pub/Questions',",
                            "    update: '/POST/Pub/Questions',",
                            "    destroy: '/Pub/Questions'",
                            "}"
                        ]
                    },
                    "configAlternates": {
                        "api": "object"
                    },
                    "name": "MyAjaxProxy",
                    "designerId": "0543a20f-8f9d-499a-b621-f371ce6d2baa",
                    "cn": [
                        {
                            "type": "Ext.data.reader.Json",
                            "reference": {
                                "name": "reader",
                                "type": "object"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "rootProperty": "data"
                            },
                            "configAlternates": {
                                "rootProperty": "string"
                            },
                            "name": "MyJsonReader2",
                            "designerId": "5df6fb6d-0563-4072-b2e9-17619fd1b0f9"
                        }
                    ]
                }
            ]
        },
        {
            "type": "jsonstore",
            "reference": {
                "name": "stores",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "model": "PersonAnswers",
                "name": "PersonAnswers"
            },
            "configAlternates": {
                "model": "model",
                "name": "string"
            },
            "name": "MyJsonStore2",
            "designerId": "9a7b5c28-069c-4ba9-8869-d36701e76585",
            "cn": [
                {
                    "type": "Ext.data.proxy.Ajax",
                    "reference": {
                        "name": "proxy",
                        "type": "object"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "api": [
                            "{",
                            "    create: '/Pub/PersonAnswers',",
                            "    read: '/Pub/PersonAnswers',",
                            "    update: '/POST/Pub/PersonAnswers',",
                            "    destroy: '/Pub/PersonAnswers'",
                            "}"
                        ]
                    },
                    "configAlternates": {
                        "api": "object"
                    },
                    "name": "MyAjaxProxy",
                    "designerId": "00c97668-a177-4678-b1e5-d824d10dceec",
                    "cn": [
                        {
                            "type": "Ext.data.reader.Json",
                            "reference": {
                                "name": "reader",
                                "type": "object"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "rootProperty": "data"
                            },
                            "configAlternates": {
                                "rootProperty": "string"
                            },
                            "name": "MyJsonReader2",
                            "designerId": "622a9b98-ef80-414e-9954-bc0a503f07e3"
                        }
                    ]
                }
            ]
        },
        {
            "type": "jsonstore",
            "reference": {
                "name": "stores",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "model": "PersonPrograms",
                "name": "PersonPrograms"
            },
            "configAlternates": {
                "model": "model",
                "name": "string"
            },
            "name": "MyJsonStore3",
            "designerId": "95c70e20-7db1-44e3-b06a-b28ccb53e222",
            "cn": [
                {
                    "type": "Ext.data.proxy.Ajax",
                    "reference": {
                        "name": "proxy",
                        "type": "object"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "api": [
                            "{",
                            "    create: '/Pub/PersonPrograms',",
                            "    read: '/Pub/PersonPrograms',",
                            "    update: '/POST/Pub/PersonPrograms',",
                            "    destroy: '/Pub/PersonPrograms'",
                            "}"
                        ]
                    },
                    "configAlternates": {
                        "api": "object"
                    },
                    "name": "MyAjaxProxy",
                    "designerId": "2d1f4ca7-9719-46e4-a111-88c967d76f9e",
                    "cn": [
                        {
                            "type": "Ext.data.reader.Json",
                            "reference": {
                                "name": "reader",
                                "type": "object"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "rootProperty": "data"
                            },
                            "configAlternates": {
                                "rootProperty": "string"
                            },
                            "name": "MyJsonReader2",
                            "designerId": "b7185457-d692-4cff-aa14-5f041a2cca64"
                        }
                    ]
                }
            ]
        }
    ]
}