/*
 * File: app/view/EditSlides.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('eLearning.view.EditSlides', {
    extend: 'Ext.container.Container',
    alias: 'widget.editslides',

    requires: [
        'eLearning.view.EditSlidesViewModel',
        'eLearning.view.EditSlidesViewController',
        'Ext.panel.Tool',
        'Ext.toolbar.Toolbar',
        'Ext.menu.Menu',
        'Ext.toolbar.Separator',
        'Ext.toolbar.TextItem',
        'Ext.menu.Separator',
        'Ext.button.Cycle',
        'Ext.menu.CheckItem',
        'Ext.toolbar.Spacer',
        'Ext.tree.Panel',
        'Ext.tree.View',
        'Ext.tree.plugin.TreeViewDragDrop',
        'Ext.tree.Column',
        'Ext.form.field.Text',
        'Ext.grid.plugin.CellEditing'
    ],

    controller: 'editslides',
    viewModel: {
        type: 'editslides'
    },
    itemId: 'editSlides',
    layout: 'border',

    items: [
        {
            xtype: 'panel',
            region: 'north',
            reference: 'panelHeader',
            itemId: 'panelHeader',
            title: 'Edit Slides',
            tools: [
                {
                    xtype: 'tool',
                    callback: 'close',
                    iconCls: 'x-fa fa-close'
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    reference: 'toolbarEdit',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                this.up('#editSlides').getController().newSection();
                            },
                            itemId: 'btnNewSection',
                            text: 'New section'
                        },
                        {
                            xtype: 'button',
                            itemId: 'btnNewSlide',
                            text: 'New slide',
                            menu: {
                                xtype: 'menu',
                                items: [
                                    {
                                        xtype: 'menuitem',
                                        handler: function(item, e) {
                                            this.up('#editSlides').getController().newSlide();
                                        },
                                        text: 'New blank slide'
                                    },
                                    {
                                        xtype: 'menuitem',
                                        handler: function(item, e) {
                                            var me = this.up('#editSlides').getController();

                                            me.newSlide();
                                            me.insertTitle();
                                            me.insertText();
                                        },
                                        text: 'New slide from template'
                                    }
                                ]
                            }
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                this.up('#editSlides').getController().deleteSlide();
                            },
                            itemId: 'btnDeleteSlide',
                            text: 'Delete slide'
                        },
                        {
                            xtype: 'button',
                            itemId: 'btnSetBackground',
                            text: 'Set background',
                            menu: {
                                xtype: 'menu',
                                width: 150,
                                items: [
                                    {
                                        xtype: 'menuitem',
                                        handler: function(item, e) {
                                            this.up('#editSlides').getController().setBackground();
                                        },
                                        text: 'Blank'
                                    },
                                    {
                                        xtype: 'menuitem',
                                        handler: function(item, e) {
                                            this.up('#editSlides').getController().setBackground('resources/images/background-0.jpg');
                                        },
                                        text: 'Background 0'
                                    },
                                    {
                                        xtype: 'menuitem',
                                        handler: function(item, e) {
                                            this.up('#editSlides').getController().setBackground('resources/images/background-1.jpg');
                                        },
                                        text: 'Background 1'
                                    },
                                    {
                                        xtype: 'menuitem',
                                        handler: function(item, e) {
                                            this.up('#editSlides').getController().setBackground('resources/images/background-2.jpg');
                                        },
                                        text: 'Background 2'
                                    },
                                    {
                                        xtype: 'menuitem',
                                        handler: function(item, e) {
                                            this.up('#editSlides').getController().setBackground('resources/images/background-3.jpg');
                                        },
                                        text: 'Background 3'
                                    },
                                    {
                                        xtype: 'menuitem',
                                        handler: function(item, e) {
                                            this.up('#editSlides').getController().setBackground('resources/images/background-4.jpg');
                                        },
                                        text: 'Background 4'
                                    },
                                    {
                                        xtype: 'menuitem',
                                        handler: function(item, e) {
                                            this.up('#editSlides').getController().setBackground('resources/images/background-5.jpg');
                                        },
                                        text: 'Background 5'
                                    }
                                ]
                            }
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'tbtext',
                            html: 'Component'
                        },
                        {
                            xtype: 'button',
                            itemId: 'btnAddComponent',
                            text: 'Add',
                            menu: {
                                xtype: 'menu',
                                items: [
                                    {
                                        xtype: 'menuitem',
                                        handler: function(item, e) {
                                            this.up('#editSlides').getController().insertTitle();
                                        },
                                        text: 'Title'
                                    },
                                    {
                                        xtype: 'menuitem',
                                        handler: function(item, e) {
                                            this.up('#editSlides').getController().insertText();
                                        },
                                        text: 'Text'
                                    },
                                    {
                                        xtype: 'menuitem',
                                        handler: function(item, e) {
                                            // TODO - make function for these lines
                                            var me = this.up('#editSlides'),
                                                refs = me.getReferences(),
                                                data = me.getController().getCurrentState();
                                            wnd = me.add({ xtype: 'fileupload' });

                                            wnd.getController().show({
                                                uploadUrl: 'nonExistingTestUrl'
                                            });



                                            this.up('#editSlides').getController().insertImage();


                                        },
                                        text: 'Image'
                                    },
                                    {
                                        xtype: 'menuitem',
                                        handler: function(item, e) {
                                            // TODO - make function for these lines
                                            var me = this.up('#editSlides'),
                                                refs = me.getReferences(),
                                                data = me.getController().getCurrentState();
                                            wnd = me.add({ xtype: 'fileupload' });

                                            wnd.getController().show({
                                                uploadUrl: 'nonExistingTestUrl'
                                            });


                                            this.up('#editSlides').getController().insertAudio();
                                        },
                                        text: 'Audio'
                                    },
                                    {
                                        xtype: 'menuitem',
                                        handler: function(item, e) {
                                            // TODO - make function for these lines
                                            var me = this.up('#editSlides'),
                                                refs = me.getReferences(),
                                                data = me.getController().getCurrentState();
                                            wnd = me.add({ xtype: 'fileupload' });

                                            wnd.getController().show({
                                                uploadUrl: 'nonExistingTestUrl'
                                            });



                                            this.up('#editSlides').getController().insertVideo();
                                        },
                                        text: 'Video'
                                    },
                                    {
                                        xtype: 'menuseparator',
                                        text: 'Menu Item'
                                    },
                                    {
                                        xtype: 'menuitem',
                                        handler: function(item, e) {
                                            this.up('#editSlides').getController().insertSelection({
                                                multi: false
                                            });
                                        },
                                        text: 'Single selection'
                                    },
                                    {
                                        xtype: 'menuitem',
                                        handler: function(item, e) {
                                            this.up('#editSlides').getController().insertSelection({
                                                multi: true
                                            });
                                        },
                                        text: 'Multiple selection'
                                    }
                                ]
                            }
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'tbtext',
                            html: 'Layout'
                        },
                        {
                            xtype: 'cycle',
                            itemId: 'btnLayout',
                            minWidth: 110,
                            showText: true,
                            menu: {
                                xtype: 'menu',
                                width: 120,
                                items: [
                                    {
                                        xtype: 'menucheckitem',
                                        text: 'Computer'
                                    },
                                    {
                                        xtype: 'menucheckitem',
                                        text: 'Tablet'
                                    },
                                    {
                                        xtype: 'menucheckitem',
                                        text: 'Phone'
                                    }
                                ]
                            }
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var me = this.up('#editSlides'),
                                    refs = me.getReferences(),
                                    data = me.getController().getCurrentState();
                                wnd = me.add({ xtype: 'sourceview' });

                                Ext.each(data.slides, function(slide) {
                                    if(slide.content) {

                                        console.log("caller - ViewSource button handler", "printing slide content", slide.content);
                                        slide.content = Ext.decode(slide.content);
                                    }
                                });

                                wnd.getController().show({
                                    value: syntaxHighlight(JSON.stringify(data, null, 2))
                                });
                            },
                            itemId: 'btnViewSource',
                            text: 'View source'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                var me = this.up('#editSlides'),
                                    refs = me.getReferences(),
                                    data = me.getController().getCurrentState();
                                wnd = me.add({ xtype: 'settings' });

                                wnd.getController().show({
                                    data: data
                                });
                            },
                            itemId: 'btnSettings',
                            text: 'Settings'
                        },
                        {
                            xtype: 'tbspacer',
                            flex: 1
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                this.up('#editSlides').getController().togglePreview(true);
                            },
                            itemId: 'btnPreview',
                            minWidth: 120,
                            text: 'Preview'
                        }
                    ]
                },
                {
                    xtype: 'toolbar',
                    reference: 'toolbarPreview',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                this.up('#editSlides').getController().prevSlide();
                            },
                            itemId: 'btnPrevSlide',
                            minWidth: 120,
                            text: 'Previous slide'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                this.up('#editSlides').getController().nextSlide();
                            },
                            itemId: 'btnNextSlide',
                            minWidth: 120,
                            text: 'Next slide'
                        },
                        {
                            xtype: 'tbspacer',
                            flex: 1
                        },
                        {
                            xtype: 'tbtext',
                            id: 'timerCountdown',
                            bind: {
                                html: '10:00'
                            }
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                this.up('#editSlides').getController().togglePreview(false);
                            },
                            itemId: 'btnClosePreview',
                            minWidth: 120,
                            text: 'Close preview'
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'panel',
            region: 'west',
            split: true,
            reference: 'panelMenu',
            itemId: 'panelMenu',
            margin: '10 0 10 10',
            padding: 0,
            width: 300,
            collapseDirection: 'left',
            title: '',
            layout: {
                type: 'vbox',
                align: 'stretch'
            },
            items: [
                {
                    xtype: 'treepanel',
                    reference: 'treeSlides',
                    flex: 1,
                    itemId: 'treeSlides',
                    padding: 10,
                    title: '',
                    emptyText: 'No slides to show.<br>Create new with button <i>New slide</i>.<br><br>Double click on slide name to rename it.',
                    hideHeaders: true,
                    rootVisible: false,
                    useArrows: true,
                    bind: {
                        store: '{TreeStoreSlides}'
                    },
                    viewConfig: {
                        rootVisible: false,
                        plugins: [
                            {
                                ptype: 'treeviewdragdrop'
                            }
                        ],
                        listeners: {
                            drop: 'onTreeViewDragDrop'
                        }
                    },
                    columns: [
                        {
                            xtype: 'treecolumn',
                            flex: 1,
                            dataIndex: 'title',
                            text: 'Pages',
                            editor: {
                                xtype: 'textfield'
                            }
                        }
                    ],
                    plugins: [
                        {
                            ptype: 'cellediting'
                        }
                    ],
                    listeners: {
                        select: 'onTreeSlidesSelect',
                        deselect: 'onTreeSlidesDeselect'
                    }
                }
            ]
        },
        {
            xtype: 'container',
            region: 'center',
            reference: 'panelSlide',
            cls: 'slide-container',
            itemId: 'panelSlide',
            margin: '10 10 10 0',
            items: [
                {
                    xtype: 'container',
                    reference: 'panelContent',
                    cls: [
                        'edit',
                        'slide'
                    ],
                    height: 600,
                    html: '<div id="html-slide"></div>',
                    id: 'panelContent',
                    itemId: 'panelContent',
                    width: 800
                }
            ]
        }
    ],
    listeners: {
        boxready: 'onEditSlidesBoxReady'
    }

});