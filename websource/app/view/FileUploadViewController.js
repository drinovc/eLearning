/*
 * File: app/view/FileUploadViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('eLearning.view.FileUploadViewController', {
	extend: 'Ext.app.ViewController',
	alias: 'controller.fileupload',

	show: function(opts) {
		opts = Ext.applyIf(opts || {}, {
		    title: 'Upload File',
		    uploadUrl: 'upload',
		    callback: Ext.emptyFn,
		    scope: this
		});

		var me = this,
		    refs = me.getReferences(),
		    view = me.getView();

		view._opts = opts;
		view.setTitle(opts.title);

		view.show();
	},

	btnSaveHandler: function(button, e) {
		var me = this,
			refs = me.getReferences(),
			view = me.getView(),
			opts = view._opts,
			form = view.down('form').getForm();

		if(form.isValid()) {
			form.submit({
				url: opts.uploadUrl,
				waitMsg: 'Uploading...',
				success: function(form, action) {
					print("success upload arguments", arguments);
					opts.callback.call(view.opts);
					view.close();
				},
				failure: function(form, action) {
					print("failure upload arguments", arguments);
				}
			});
		}
	},

	btnCancelHandler: function(button, e) {
		var me = this,
			refs = me.getReferences(),
			view = me.getView();

		view.close();
	},

	btnSelectHandler: function(button, e) {
		var me = this,
			refs = me.getReferences(),
			view = me.getView(),
			opts = view._opts,
			form = view.down('form').getForm();

		if(form.isValid()) {
			//form.submit({
			//    url: opts.uploadUrl,
			//    waitMsg: 'Uploading...',
			//    success: function(form, action) {
			//        console.log(arguments);
			//        opts.callback.call(view.opts);
			//        view.close();
			//    },
			//    failure: function(form, action) {
			//        console.log(arguments);
			//    }
			//});

			console.warn("URL upload unsupported");
		}
	},

	btnCancelHandler: function(button, e) {
		var me = this,
			refs = me.getReferences(),
			view = me.getView();

		view.close();
	}

});
