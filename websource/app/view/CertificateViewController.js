/*
 * File: app/view/CertificateViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('eLearning.view.CertificateViewController', {
	extend: 'Ext.app.ViewController',
	alias: 'controller.certificate',

	show: function(opts) {
		opts = Ext.applyIf(opts, {
		    data: {},
		    callback: function(value) { console.warn('Please specify callback!', value); },
		    scope: this
		});

		var me = this,
		    refs = me.getReferences(),
		    view = me.getView();

		me._opts = opts;

		Ext.getCmp('certificateName').setText(me._opts.certificateName);
		if(me._opts.person){
			Ext.getCmp('reciever').setText(me._opts.person.PERSON_FIRST_NAME + " " + me._opts.person.PERSON_LAST_NAME);

		}else{
			console.warn("no person recieved in certificate!");
		}

		view.show();
	},

	printCertificate: function(button, e) {
		var prtContent = Ext.getCmp('certificateContainer');
		var WinPrint = window.open('', '', 'left=0,top=0,width=800,height=900,toolbar=0,scrollbars=0,status=0');
		//WinPrint.document.write(prtContent.el.dom.innerHTML);


		/*
		html2canvas(refs.panelContent.el.dom,
		{
		scale:0.1
		}).then(canvas => {

		//document.body.appendChild(canvas);
		//print("canvas",   btoa(canvas.toDataURL('image/png', 0.1)));
		var dataURL = canvas.toDataURL('image/jpeg', 0.5);

		var currentSlide = me.getCurrentSlide();
		var rec = me.getStore("TreeStoreSlides").findRecord('id', currentSlide.data.id);

		var content =  Ext.decode(rec.data.content);
		content.thumbnail = LZString.compressToEncodedURIComponent(dataURL);
		rec.data.content = Ext.encode(content);

		rec.phantom = true;

		print("printing record", rec);


		var blob = dataURItoBlob(dataURL);



		var img = new Image();
		img.src = URL.createObjectURL(blob);
		WinPrint.document.write(img);

	});
	*/











	//example of writing
	WinPrint.document.write('<link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">');
	//Our css??
	//WinPrint.document.write('<link rel="stylesheet" type="text/css" href="http://localhost:98/build/development/eLearning/resources/eLearning-all.css">');


	WinPrint.document.close();
	WinPrint.focus();
	WinPrint.print();
	//WinPrint.close();

	//Be careful if the div that you're printing with this code requires any CSS to render they way you want.
	//If it does you'll have to make sure you add it to the page as well using WinPrint.document.write(cssLinkTag)

	}

});
